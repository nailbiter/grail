# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-17 11:07
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
                ('cd', models.DurationField(default=0)),
                ('lastTimeUsed', models.DateTimeField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='AbilityOwn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Ability')),
            ],
        ),
        migrations.CreateModel(
            name='AbilityOwnType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AchievementOwnType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AchievementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentOwn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentOwnType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('abilities', models.ManyToManyField(through='main.AbilityOwn', to='main.Ability')),
                ('equipment', models.ManyToManyField(through='main.EquipmentOwn', to='main.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='HeroClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=30)),
                ('dateOfBirth', models.DateField()),
                ('coins', models.IntegerField(default=0)),
                ('experience', models.IntegerField(default=0)),
                ('strength', models.IntegerField(default=0)),
                ('creativity', models.IntegerField(default=0)),
                ('intelligence', models.IntegerField(default=0)),
                ('willpower', models.IntegerField(default=0)),
                ('coaching', models.IntegerField(default=0)),
                ('nobility', models.IntegerField(default=0)),
                ('kindness', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RelationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SkillType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserM2MAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Achievement')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ProjectUser')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.AchievementOwnType')),
            ],
        ),
        migrations.CreateModel(
            name='UserM2MUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('fromFriend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromFriends', to='main.ProjectUser')),
                ('relationType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.RelationType')),
                ('toFriend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toFriends', to='main.ProjectUser')),
            ],
        ),
        migrations.AddField(
            model_name='skill',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.SkillType'),
        ),
        migrations.AddField(
            model_name='projectuser',
            name='achievements',
            field=models.ManyToManyField(through='main.UserM2MAchievement', to='main.Achievement'),
        ),
        migrations.AddField(
            model_name='projectuser',
            name='friends',
            field=models.ManyToManyField(through='main.UserM2MUser', to='main.ProjectUser'),
        ),
        migrations.AddField(
            model_name='projectuser',
            name='hero',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='main.Hero'),
        ),
        migrations.AddField(
            model_name='projectuser',
            name='login',
            field=models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hero',
            name='heroClass',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.HeroClass'),
        ),
        migrations.AddField(
            model_name='equipmentown',
            name='hero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Hero'),
        ),
        migrations.AddField(
            model_name='equipmentown',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.EquipmentOwnType'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.EquipmentType'),
        ),
        migrations.AddField(
            model_name='activity',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ActivityType'),
        ),
        migrations.AddField(
            model_name='achievement',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.AchievementType'),
        ),
        migrations.AddField(
            model_name='abilityown',
            name='hero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Hero'),
        ),
        migrations.AddField(
            model_name='abilityown',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.AbilityOwnType'),
        ),
        migrations.AddField(
            model_name='ability',
            name='heroClass',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.HeroClass'),
        ),
        migrations.AlterUniqueTogether(
            name='userm2muser',
            unique_together=set([('fromFriend', 'toFriend')]),
        ),
        migrations.AlterUniqueTogether(
            name='userm2machievement',
            unique_together=set([('owner', 'achievement')]),
        ),
        migrations.AlterUniqueTogether(
            name='equipmentown',
            unique_together=set([('hero', 'equipment')]),
        ),
        migrations.AlterUniqueTogether(
            name='abilityown',
            unique_together=set([('hero', 'ability')]),
        ),
    ]
